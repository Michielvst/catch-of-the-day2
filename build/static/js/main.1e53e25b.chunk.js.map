{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","e","preventDefault","storeName","current","value","props","history","push","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","component","name","price","onClick","removeFromOrder","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","console","log","updatedFish","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","async","fetch","storeId","context","store","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","loadSampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","handleClick","addToOrder","details","src","alt","disabled","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.1e53e25b.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getFunName } from '../helpers';\r\n\r\nclass StorePicker extends React.Component {\r\n  myInput = React.createRef();\r\n\r\n  static propTypes = {\r\n    history: PropTypes.object.isRequired\r\n  };\r\n\r\n  goToStore = (e) => {\r\n    e.preventDefault();\r\n    const storeName = this.myInput.current.value;\r\n    this.props.history.push(`/store/${storeName}`);\r\n  }\r\n  render() {\r\n    return (\r\n      <form className=\"store-selector\" onSubmit={this.goToStore}>\r\n        <h2>Please Enter A Store</h2>\r\n        <input\r\n          type=\"text\"\r\n          ref={this.myInput}\r\n          required\r\n          placeholder=\"Store Name\"\r\n          defaultValue={getFunName()}\r\n        />\r\n        <button type=\"submit\">Visit Store</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StorePicker;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Header = (props) => (\r\n  <header className=\"top\">\r\n    <h1>\r\n      Catch\r\n      <span className=\"ofThe\">\r\n        <span className=\"of\">Of</span>\r\n        <span className=\"the\">The</span>\r\n      </span>\r\n      Day\r\n    </h1>\r\n    <h3 className=\"tagline\">\r\n      <span>{props.tagline}</span>\r\n    </h3>\r\n  </header>\r\n);\r\n\r\nHeader.propTypes = {\r\n  tagline: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { formatPrice } from '../helpers';\r\nimport {TransitionGroup, CSSTransition } from 'react-transition-group'; \r\n\r\nclass Order extends React.Component {\r\n  static propTypes = {\r\n    fishes: PropTypes.object.isRequired,\r\n    order: PropTypes.object.isRequired,\r\n    removeFromOrder: PropTypes.func.isRequired\r\n  };\r\n\r\n  renderOrder = (key) => {\r\n    const fish = this.props.fishes[key];\r\n    const count = this.props.order[key];\r\n    const isAvailable = fish && fish.status === 'available';\r\n    const transitionOptions = {\r\n      classNames: \"order\",\r\n      key,\r\n      timeout: { enter: 500, exit: 500 }\r\n    };\r\n    if(!fish) return null;\r\n    if(!isAvailable) {\r\n      return (\r\n        <CSSTransition {...transitionOptions}>\r\n          <li key={key}>\r\n            Sorry {fish ? fish.name : 'fish'} is no longer available\r\n          </li>\r\n        </CSSTransition>\r\n      )};\r\n    return (\r\n      <CSSTransition {...transitionOptions}>\r\n        <li key={key}>\r\n          <span>\r\n            <TransitionGroup component=\"span\" className=\"count\">\r\n              <CSSTransition\r\n                classNames=\"count\"\r\n                key={count}\r\n                timeout={{ enter: 500, exit: 500 }}  \r\n              >\r\n                <span>{count}</span>\r\n              </CSSTransition>\r\n            </TransitionGroup> \r\n          lbs {fish.name}\r\n          {formatPrice(count * fish.price)}\r\n          <button onClick={() => this.props.removeFromOrder(key)}>x</button>\r\n          </span>\r\n        </li>\r\n      </CSSTransition>\r\n    );\r\n  };\r\n  render() {\r\n    const orderIds = Object.keys(this.props.order);\r\n    const total = orderIds.reduce((prevTotal, key) =>{\r\n      const fish = this.props.fishes[key];\r\n      const count = this.props.order[key];\r\n      const isAvailable = fish && fish.status === 'available';\r\n      if(isAvailable) {\r\n        return prevTotal + (count * fish.price); \r\n      }\r\n      return prevTotal;\r\n    }, 0);\r\n    return (\r\n    <div className=\"order-wrap\">\r\n      <h2>Order</h2>\r\n      <TransitionGroup component=\"ul\" className=\"order\">\r\n        {orderIds.map(this.renderOrder)}\r\n      </TransitionGroup>\r\n      <div className=\"total\">\r\n        Total:\r\n        <strong>{formatPrice(total)}</strong>\r\n      </div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Order;","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nclass AddFishForm extends React.Component { \r\n  nameRef = React.createRef();\r\n  priceRef = React.createRef();\r\n  statusRef = React.createRef();\r\n  descRef = React.createRef();\r\n  imageRef = React.createRef();\r\n\r\n  static propTypes = {\r\n    addFish: PropTypes.func.isRequired\r\n  }\r\n\r\n  createFish = (e) => {\r\n      e.preventDefault();\r\n      const fish = {\r\n        name: this.nameRef.current.value,\r\n        price: parseFloat(this.priceRef.current.value),\r\n        status: this.statusRef.current.value,\r\n        desc: this.descRef.current.value,\r\n        image: this.imageRef.current.value,\r\n      }\r\n      this.props.addFish(fish);\r\n      e.currentTarget.reset();\r\n   }\r\n  render() {\r\n    return (\r\n      <form className=\"fish-edit\" onSubmit={this.createFish}>\r\n          <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\r\n          <input name=\"price\" ref={this.priceRef} type=\"text\" placeholder=\"Price\" />\r\n          <select name=\"status\" ref={this.statusRef}>\r\n            <option value=\"available\">Fresh!</option>\r\n            <option value=\"unavailable\">Sold Out!</option>\r\n          </select>\r\n          <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\" />\r\n          <input name=\"image\" ref={this.imageRef} type=\"text\" placeholder=\"Image\" />\r\n          <button type=\"submit\">+ Add Fish</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddFishForm;","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nclass EditFishForm extends React.Component {\r\n    static propTypes = {\r\n        fish: PropTypes.shape({\r\n            image: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            desc: PropTypes.string.isRequired,\r\n            status: PropTypes.string.isRequired,\r\n            price: PropTypes.number.isRequired\r\n        }),\r\n        index: PropTypes.string.isRequired,\r\n        updateFish: PropTypes.func.isRequired\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        console.log(e.currentTarget.value);\r\n        const updatedFish = {\r\n            ...this.props.fish,\r\n            [e.currentTarget.name]: e.currentTarget.value\r\n        };\r\n        this.props.updateFish(this.props.index, updatedFish)\r\n    }\r\n\r\n    render() {\r\n        return ( \r\n            <div className=\"fish-edit\">\r\n                <input type=\"text\" name=\"name\" onChange={this.handleChange} value={this.props.fish.name} />\r\n                <input type=\"text\" name=\"price\" onChange={this.handleChange} value={this.props.fish.price} />\r\n                <select type=\"text\" name=\"status\" onChange={this.handleChange} value={this.props.fish.status}>\r\n                    <option value='available'>Fresh!</option>\r\n                    <option value='unavailable'>Sold Out!</option>\r\n                </select>\r\n                <textarea name=\"desc\" onChange={this.handleChange} value={this.props.fish.desc} />\r\n                <input type=\"text\" name=\"image\" onChange={this.handleChange} value={this.props.fish.image} />\r\n                <button onClick={() => this.props.deleteFish(this.props.index)}>Remove Fish</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditFishForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Login = (props) => (\r\n    <nav className=\"login\">\r\n        <p>Sign in to manage your store's inventory.</p>\r\n        <button \r\n            className=\"github\"\r\n            onClick={() => props.authenticate(\"Github\")}\r\n        >\r\n            Log In With Github\r\n        </button>\r\n        <button \r\n            className=\"twitter\"\r\n            onClick={() => props.authenticate(\"Twitter\")}\r\n        >\r\n            Log In With Twitter\r\n        </button>\r\n        <button \r\n            className=\"facebook\"\r\n            onClick={() => props.authenticate(\"Facebook\")}\r\n        >\r\n            Log In With Facebook\r\n        </button>\r\n    </nav>\r\n);\r\n\r\nLogin.propTypes = {\r\n    authenticate: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Login;","import Rebase from 're-base';\r\nimport firebase from 'firebase';\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyDb-jAfNstLLn_K3iZWgVU_9p2cBMw2Tao\",\r\n    authDomain: \"catch-of-the-day2-michielvst.firebaseapp.com\",\r\n    databaseURL: \"https://catch-of-the-day2-michielvst.firebaseio.com\"\r\n})\r\n\r\nconst base = Rebase.createClass(firebaseApp.database());\r\n\r\nexport { firebaseApp };\r\n\r\nexport default base;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport firebase from 'firebase';\r\nimport AddFishForm from './AddFishForm';\r\nimport EditFishForm from './EditFishForm';\r\nimport Login from './Login';\r\nimport base, { firebaseApp } from '../base';\r\n\r\nclass Inventory extends React.Component {\r\n  static propTypes = {\r\n    fishes: PropTypes.object.isRequired,\r\n    updateFish: PropTypes.func.isRequired,\r\n    deleteFish: PropTypes.func.isRequired,\r\n    loadSampleFishes: PropTypes.func.isRequired\r\n  };\r\n\r\n  state = {\r\n    uid: null,\r\n    owner: null\r\n  }\r\n\r\n  componentDidMount() {\r\n    firebase.auth().onAuthStateChanged(user => {\r\n      if(user) {\r\n        this.authHandler({ user });\r\n      }\r\n    })\r\n  }\r\n\r\n  authHandler = async (authData) => {\r\n    const store = await base.fetch(this.props.storeId, { context: this });\r\n    if(!store.owner){\r\n      await base.post(`${this.props.storeId}/owner`, {\r\n        data: authData.user.uid\r\n      });\r\n    }\r\n    this.setState({\r\n      uid: authData.user.uid,\r\n      owner: store.owner || authData.user.uid\r\n    });\r\n  };\r\n\r\n  authenticate = (provider) => {\r\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\r\n    firebaseApp\r\n      .auth()\r\n      .signInWithPopup(authProvider)\r\n      .then(this.authHandler);\r\n  };\r\n\r\n  logout = async () => {\r\n    console.log('Logging out!');\r\n    await firebase.auth().signOut();\r\n    this.setState({ uid: null });\r\n  }\r\n\r\n  render() {\r\n    const logout = <button onClick={this.logout}>Log Out!</button>\r\n\r\n    if(!this.state.uid) {\r\n      return <Login authenticate={this.authenticate} />;\r\n    }\r\n\r\n    if(this.state.uid !== this.state.owner) {\r\n      return (\r\n        <div>\r\n          <p>Sorry you are not the owner!</p>\r\n          {logout}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"inventory\">\r\n        <h2>Inventory</h2>\r\n        {logout}\r\n        {Object.keys(this.props.fishes).map(key => (\r\n          <EditFishForm \r\n            key={key} \r\n            index={key} \r\n            fish={this.props.fishes[key]} \r\n            updateFish={this.props.updateFish} \r\n            deleteFish={this.props.deleteFish} />\r\n        ))}\r\n        <AddFishForm addFish={this.props.addFish} />\r\n        <button onClick={this.props.loadSampleFishes}>\r\n          Load Sample Fishes\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Inventory;","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { formatPrice } from '../helpers';\r\n\r\nclass Fish extends React.Component {\r\n  static propTypes = {\r\n    details: PropTypes.shape({\r\n      image: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      desc: PropTypes.string.isRequired,\r\n      status: PropTypes.string.isRequired,\r\n      price: PropTypes.number.isRequired\r\n    }),\r\n    addToOrder: PropTypes.func.isRequired,\r\n  };\r\n  handleClick = () => {\r\n    this.props.addToOrder(this.props.index);\r\n  }\r\n  render() {\r\n    const {image, name, price, desc, status} = this.props.details;\r\n    const isAvailable = status === 'available';\r\n\r\n    return (\r\n        <li className=\"menu-fish\">\r\n            <img src={image} alt={name} />\r\n            <h3 className=\"fish-name\">\r\n                {name}\r\n                <span className=\"price\">{formatPrice(price)}</span>\r\n            </h3>\r\n            <p>{desc}</p>\r\n        <button disabled={!isAvailable} onClick={this.handleClick}>\r\n          {isAvailable ? \"Add To Order\" : \"Sold Out!\"}\r\n        </button>\r\n        </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Fish;","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport Header from './Header';\r\nimport Order from './Order';\r\nimport Inventory from './Inventory';\r\nimport sampleFishes from '../sample-fishes';\r\nimport Fish from './Fish';\r\nimport base from '../base';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    fishes: {},\r\n    order: {},\r\n  };\r\n\r\n  static propTypes = {\r\n    match: PropTypes.object.isRequired\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { params } = this.props.match;\r\n    const localStorageRef = localStorage.getItem(params.storeId);\r\n    if(localStorageRef){\r\n      this.setState({ order: JSON.parse(localStorageRef) });\r\n    }\r\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\r\n      context: this,\r\n      state: 'fishes'\r\n    });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    localStorage.setItem(\r\n      this.props.match.params.storeId, JSON.stringify(this.state.order)\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    base.removeBinding(this.ref);\r\n  }\r\n\r\n  addFish = (fish) => {\r\n    const fishes = {...this.state.fishes};\r\n    fishes[`fish${Date.now()}`] = fish;\r\n    this.setState({\r\n      fishes: fishes\r\n    });\r\n  };\r\n\r\n  updateFish = (key, updatedFish) => {\r\n    const fishes = {...this.state.fishes};\r\n    fishes[key] = updatedFish;\r\n    this.setState( {fishes: fishes});\r\n  }\r\n  \r\n  deleteFish = (key) => {\r\n    const fishes = {...this.state.fishes};\r\n    fishes[key] = null;\r\n    this.setState({ fishes });\r\n  }\r\n\r\n  removeFromOrder = (key) => {\r\n    const order = {...this.state.order}; \r\n    delete order[key];\r\n    this.setState({ order });\r\n  }\r\n\r\n  loadSampleFishes = () => {\r\n    this.setState({ fishes: sampleFishes});\r\n  }\r\n\r\n  addToOrder = (key) => {\r\n    const order = {...this.state.order};\r\n    order[key] = order[key] + 1 || 1;\r\n    this.setState({ order });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"catch-of-the-day\">\r\n        <div className=\"menu\">\r\n          <Header tagline=\"Fresh Seafood Market\" />\r\n          <ul className=\"fishes\">\r\n            {Object.keys(this.state.fishes).map(key => (\r\n            <Fish \r\n              key={key}\r\n              index={key} \r\n              details={this.state.fishes[key]} \r\n              addToOrder={this.addToOrder}/>\r\n          ))}\r\n          </ul>\r\n        </div>\r\n        <Order \r\n          fishes={this.state.fishes} \r\n          order={this.state.order}\r\n          removeFromOrder={this.removeFromOrder} \r\n        />\r\n        <Inventory \r\n          addFish={this.addFish}\r\n          updateFish={this.updateFish} \r\n          loadSampleFishes={this.loadSampleFishes} \r\n          fishes={this.state.fishes} \r\n          deleteFish={this.deleteFish} \r\n          storeId={this.props.match.params.storeId}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\n\r\nconst NotFound = () => (\r\n  <div>\r\n    <h2>Not Found!!!!!</h2>\r\n  </div>\r\n);\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport StorePicker from './StorePicker';\r\nimport App from './App';\r\nimport NotFound from './NotFound';\r\n\r\nconst Router = () => (\r\n  <BrowserRouter>\r\n    <Switch>\r\n      <Route exact path=\"/\" component={StorePicker} />\r\n      <Route path=\"/store/:storeId\" component={App} />\r\n      <Route component={NotFound} />\r\n    </Switch>\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default Router;","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport Router from './components/Router';\r\nimport './css/style.css';\r\n\r\nrender(<Router />, document.querySelector('#main'));"],"sourceRoot":""}